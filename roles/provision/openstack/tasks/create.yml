---
- name: int_network
  os_network:
    cloud: "{{ cloudname }}"
    state: present
    name: "{{ netname }}_network"
    external: false
  register: osnetwork

- os_subnet:
    cloud: "{{ cloudname }}"
    state: present
    network_name: "{{ netname }}_network"
    name: "{{ netname }}_subnet"
    cidr: 192.168.24.0/23
    dns_nameservers:
      - "{{ lab_nameserver1 }}"
      - "{{ lab_nameserver2 }}"
- debug:
    msg: "Public network name is {{ public_network_name }}"


- os_router:
    cloud: "{{ cloudname }}"
    state: present
    name: "{{ netname }}_router"
    interfaces: "{{ netname }}_subnet"
    network: "{{ public_network_name }}"

- os_security_group:
    cloud: "{{ cloudname }}"
    state: present
    name: "{{ securitygroupname }}"
    description: security group for foo servers

- os_security_group_rule:
    cloud: "{{ cloudname }}"
    security_group: "{{ securitygroupname }}"
    protocol: "{{ item }}"
    port_range_min: 1
    port_range_max: 65535
    remote_ip_prefix: 0.0.0.0/0
  with_items:
    - tcp
    - udp

- name: create servers
  os_server:
    cloud: "{{ cloudname }}"
    state: present
    name: "{{ item.name }}.{{ clustername }}"
    image: "{{ image_name }}"
    key_name: "{{ sshkeyname }}"
    timeout: 200
    flavor: "{{ item.flavor }}"
    security_groups:
      - "{{ securitygroupname }}"
    nics:
      -  net-id:  "{{ osnetwork.network.id }}"
         net-name: "{{ netname }}_network" 
    meta:
      hostname: "{{ item.name }}.{{ clustername }}"
      fqdn: "{{ item.name }}.{{ clustername }}"
    userdata: |
      #cloud-config
      hostname: "{{ item.name }}.{{ clustername }}"
      fqdn:  "{{ item.name }}.{{ clustername }}"
      write_files:
        -   path: /etc/sudoers.d/999-ansible-requiretty
            permissions: 440
      content: |
        Defaults:{{ netname }} !requiretty
  with_items: "{{ cluster_hosts }}"
  register: osservers

- file:
    path: "{{ config_dir }}"
    state: directory
    mode: 0755

- file:
    path: "{{ config_dir }}/deployments"
    state: directory
    mode: 0755

- file:
    path: "{{ cluster_dir }}"
    state: directory
    mode: 0755

- template:
    src: inventory.ini.j2
    dest: "{{ cluster_dir }}/inventory.ini"
    force: yes
    backup: no

- name: create openshift var volume
  os_volume:
    cloud: "{{ cloudname }}"
    size: 40
    display_name: "{{ item.volume_name }}"
  register: openshift_var_volume
  with_items: "{{ cluster_volumes }}"

- name: attach var volume to OCE Master
  os_server_volume:
    cloud: "{{ cloudname }}"
    state: present
    server: "{{ item.server_name }}.{{ clustername }}"
    volume:  "{{ item.volume_name }}"
    device: /dev/vdb
  with_items: "{{ cluster_volumes }}"
