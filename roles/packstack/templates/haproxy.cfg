global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    timeout connect         10s
    timeout client          10s
    timeout server          10s
    maxconn                 10000
    balance roundrobin
    option  forwardfor


backend glance-api
    server glance-01 127.0.0.1:{{ glance_api_haproxy_port }} check inter 10s

frontend glance-api
    bind 0.0.0.0:9292 ssl crt {{ haproxy_certs }}
    default_backend glance-api

backend cinder-api
    server cinder-01 127.0.0.1:{{ cinder_api_haproxy_port }} check inter 10s

frontend cinder-api
    bind 0.0.0.0:8776 ssl crt {{ haproxy_certs }}
    default_backend cinder-api

backend neutron-api
    server neutron-01 127.0.0.1:{{ neutron_api_haproxy_port }} check inter 10s

frontend neutron-api
    bind 0.0.0.0:9696 ssl crt {{ haproxy_certs }}
    default_backend neutron-api

backend nova-api
    server nova-01 127.0.0.1:{{ nova_api_haproxy_port }} check inter 10s

frontend nova-api
    bind 0.0.0.0:8774 ssl crt {{ haproxy_certs }}
    default_backend nova-api

backend nova-ec2
    server nova-ec2-01 127.0.0.1:{{ nova_ec2_haproxy_port }} check inter 10s

frontend nova-ec2
    bind 0.0.0.0:8773 ssl crt {{ haproxy_certs }}
    default_backend nova-ec2
