- name: get mysql grants
  tags:
    - mariadb
  command: mysql -u root --execute="select User from mysql.user where plugin='kerberos';"
  register: kerberos_users
  changed_when: false

- name: add keystone kerberos grant
  tags:
    - mariadb
  command: >
      mysql -u root
      --execute="DROP USER keystone_admin; CREATE USER keystone_admin IDENTIFIED VIA kerberos AS 'keystone/{{ hostname }}@{{ ipa_realm }}'; GRANT ALL PRIVILEGES ON keystone.* TO 'keystone_admin';"
  when: "'keystone_admin' not in kerberos_users.stdout"
  notify:
    - restart httpd

- name: add glance kerberos grant
  tags:
    - mariadb
  command: >
      mysql -u root
      --execute="DROP USER glance; CREATE USER glance IDENTIFIED VIA kerberos AS 'glance/{{ hostname }}@{{ ipa_realm }}'; GRANT ALL PRIVILEGES ON glance.* TO 'glance';"
  when: "'glance' not in kerberos_users.stdout"
  notify:
    - restart glance-api
    - restart glance-registry

- name: add cinder kerberos grant
  tags:
    - mariadb
  command: >
      mysql -u root
      --execute="DROP USER cinder; CREATE USER cinder IDENTIFIED VIA kerberos AS 'cinder/{{ hostname }}@{{ ipa_realm }}'; GRANT ALL PRIVILEGES ON cinder.* TO 'cinder';"
  when: "'cinder' not in kerberos_users.stdout"
  notify:
    - restart cinder-api
    - restart cinder-scheduler
    - restart cinder-volume

- name: add nova kerberos grant
  tags:
    - mariadb
  command: >
      mysql -u root
      --execute="DROP USER nova; CREATE USER nova IDENTIFIED VIA kerberos AS 'nova/{{ hostname }}@{{ ipa_realm }}'; GRANT ALL PRIVILEGES ON nova.* TO 'nova';"
  when: "'nova' not in kerberos_users.stdout"
  notify:
    - restart nova-compute
    - restart nova-cert
    - restart nova-conductor
    - restart nova-consoleauth
    - restart nova-novncproxy
    - restart nova-scheduler

- name: add neutron kerberos grant
  tags:
    - mariadb
  command: >
      mysql -u root
      --execute="DROP USER neutron; CREATE USER neutron IDENTIFIED VIA kerberos AS 'neutron/{{ hostname }}@{{ ipa_realm }}'; GRANT ALL PRIVILEGES ON neutron.* TO 'neutron';"
  when: "'neutron' not in kerberos_users.stdout"
  notify:
    - restart neutron-api
    - restart neutron-dhcp
    - restart neutron-l3
    - restart neutron-metadata
    - restart neutron-openvswitch
